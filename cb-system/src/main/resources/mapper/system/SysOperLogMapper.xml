<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cb.system.mapper.SysOperLogMapper">

	<resultMap type="SysOperLog" id="SysOperLogResult">
		<id     property="operId"         column="oper_id"        />
		<result property="title"          column="title"          />
		<result property="businessType"   column="business_type"  />
		<result property="method"         column="method"         />
		<result property="requestMethod"  column="request_method" />
		<result property="operatorType"   column="operator_type"  />
		<result property="operName"       column="oper_name"      />
		<result property="deptName"       column="dept_name"      />
		<result property="operUrl"        column="oper_url"       />
		<result property="operIp"         column="oper_ip"        />
		<result property="operLocation"   column="oper_location"  />
		<result property="operParam"      column="oper_param"     />
		<result property="jsonResult"     column="json_result"    />
		<result property="status"         column="status"         />
		<result property="errorMsg"       column="error_msg"      />
		<result property="operTime"       column="oper_time"      />
		<result property="hmac"       column="hmac"      />
	</resultMap>

	<sql id="selectOperLogVo">
        select oper_id, title, business_type, method, request_method, operator_type, oper_name, dept_name, oper_url, oper_ip, oper_location, oper_param, json_result, status, error_msg, oper_time,hmac
        from sys_oper_log
    </sql>
    
	<insert id="insertOperlog" parameterType="SysOperLog">
		insert into sys_oper_log(title, business_type, method, request_method, operator_type, oper_name, dept_name, oper_url, oper_ip, oper_location, oper_param, json_result, status, error_msg, oper_time,hmac)
        values (#{title}, #{businessType}, #{method}, #{requestMethod}, #{operatorType}, #{operName}, #{deptName}, #{operUrl}, #{operIp}, #{operLocation}, #{operParam}, #{jsonResult}, #{status}, #{errorMsg}, sysdate(),#{hmac})
	</insert>
	<insert id="insertOperlog" parameterType="SysOperLog" databaseId="kingbase">
		insert into sys_oper_log(title, business_type, method, request_method, operator_type, oper_name, dept_name, oper_url, oper_ip, oper_location, oper_param, json_result, status, error_msg, oper_time,hmac)
        values (#{title}, #{businessType}, #{method}, #{requestMethod}, #{operatorType}, #{operName}, #{deptName}, #{operUrl}, #{operIp}, #{operLocation}, #{operParam}, #{jsonResult}, #{status}, #{errorMsg}, sysdate,#{hmac})
	</insert>
	
	<select id="selectOperLogList" parameterType="SysOperLog" resultMap="SysOperLogResult">
		select log.oper_id, log.title, log.business_type, log.method, log.request_method, log.operator_type,
		log.oper_name, log.dept_name, log.oper_url, log.oper_ip, log.oper_location, log.oper_param, log.json_result,
		log.status, log.error_msg, log.oper_time,log.hmac
		from sys_oper_log as log left join sys_user as u on log.oper_name = u.user_name
		<where>
			<if test="et.title != null and title != ''">
				AND log.title like concat('%', #{et.title}, '%')
			</if>
			<if test="et.businessType != null and et.businessType != ''">
				AND log.business_type = #{et.businessType}
			</if>
			<if test="et.businessTypes != null and et.businessTypes.length > 0">
				AND log.business_type in
				<foreach collection="et.businessTypes" item="businessType" open="(" separator="," close=")">
					#{businessType}
				</foreach>
			</if>
			<if test="et.status != null">
				AND log.status = #{et.status}
			</if>
			<if test="et.operName != null and et.operName != ''">
				AND log.oper_name like concat('%', #{et.operName}, '%')
			</if>
			<if test="et.params.beginTime != null and et.params.beginTime != ''"><!-- 开始时间检索 -->
				and date_format(log.oper_time,'%y%m%d') &gt;= date_format(#{et.params.beginTime},'%y%m%d')
			</if>
			<if test="et.params.endTime != null and et.params.endTime != ''"><!-- 结束时间检索 -->
				and date_format(log.oper_time,'%y%m%d') &lt;= date_format(#{et.params.endTime},'%y%m%d')
			</if>
		    <if test="userType != null and userType != ''">and find_in_set(u.user_type,#{userType})</if>
		</where>
		order by oper_id desc
	</select>

	
	<delete id="deleteOperLogByIds" parameterType="Long">
 		delete from sys_oper_log where oper_id in
 		<foreach collection="array" item="operId" open="(" separator="," close=")">
 			#{operId}
        </foreach> 
 	</delete>
 	
 	<select id="selectOperLogById" parameterType="Long" resultMap="SysOperLogResult">
		<include refid="selectOperLogVo"/>
		where oper_id = #{operId}
	</select>
	
	<update id="cleanOperLog">
        truncate table sys_oper_log
    </update>

</mapper> 